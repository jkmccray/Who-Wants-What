@using Microsoft.AspNetCore.Identity

@model WhoWantsWhat.Models.ViewModels.GroupsViewModels.MyGroupsAndSearchViewModel

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Groups</h1>

<div class="search-box-and-create-button">
    <form asp-action="Index" class="form-inline my-2 my-lg-0">
        <input asp-for="GroupSearchText" class="form-control mr-sm-2" type="text" placeholder="Search for groups to join">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
    </form>
    <p>
        <a class="btn btn-primary mt-3" asp-action="Create">Create New Group</a>
    </p>
</div>
@if (Model.GroupSearchText != null && Model.Groups.Count == 0)
{
    <p>No groups found. Please try another search.</p>
}
<div class="row group-list">
    @foreach (var g in Model.Groups)
    {
        var groupUsers = g.GroupUsers.OrderBy(gu => gu.User.LastName);
        <div class="group-card">
            <h4 class="card-header group-card-header">@Html.ActionLink(g.Name.ToString(), "Details", new { id = g.GroupId })</h4>
            <ul class="list-group">
                @foreach (var u in groupUsers.Where(gu => gu.Joined))
                {
                    var UserId = u.UserId;
                    var GroupId = g.GroupId;
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @*@u.User.FirstName @u.User.LastName*@
                        <form>
                            <input type="hidden" asp-for="@UserId" />
                            <input type="hidden" asp-for="@GroupId" />
                            <button class="btn btn-link" asp-action="Index" asp-controller="WishLists">@u.User.FirstName @u.User.LastName</button>
                        </form>
                    </li>
                }
            </ul>
            @if (!groupUsers.Any(gu => gu.UserId == UserManager.GetUserId(User)))
                    {
                        var GroupId = g.GroupId;
                        <form asp-action="RequestToJoinGroup" asp-controller="Groups">
                            <input label="GroupId" type="hidden" asp-for="@GroupId" />
                            <input label="GroupSearchText" type="hidden" asp-for="GroupSearchText" />
                            <input type="submit" value="Request to Join" class="btn btn-secondary" />
                        </form>
                }
            else if (!groupUsers.FirstOrDefault(gu => gu.UserId == UserManager.GetUserId(User)).Joined)
                {
                    <button disabled class="btn btn-secondary disabled">Requested to Join</button>
                }
        </div>
    }
</div>